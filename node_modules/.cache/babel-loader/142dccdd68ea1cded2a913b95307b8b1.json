{"ast":null,"code":"import ModalDifficulty from \"@/assets/components/ModalDifficulty\";\nimport ModalLevel from \"@/assets/components/ModalLevel\";\n\nfunction loadData() {\n  fetch('http://localhost:3000/songs').then(res => res.json()).then(data => this.songs = data).catch(err => console.log(err.message));\n  fetch('http://localhost:3000/difficulties').then(res => res.json()).then(data => this.difficulties = data).catch(err => console.log(err.message));\n  fetch('http://localhost:3000/mixes').then(res => res.json()).then(data => this.mixes = data).catch(err => console.log(err.message));\n  fetch('http://localhost:3000/userDifficulty').then(res => res.json()).then(data => this.userDifficulty = data).catch(err => console.log(err.message));\n}\n\nexport default {\n  data() {\n    return {\n      accountID: 0,\n      isMounted: false,\n      songs: [],\n      mixes: [],\n      difficulties: [],\n      userDifficulty: []\n    };\n  },\n\n  mounted() {\n    loadData();\n    this.isMounted = true;\n  },\n\n  methods: {\n    calcDiff(song) {\n      console.log(song);\n      return this.difficulties.filter(difficulty => {\n        return difficulty.songID === song.songID;\n      });\n    },\n\n    calcMix(song) {\n      console.log(song);\n      return this.mixes.filter(mix => {\n        return mix.mixID === song.mixID;\n      });\n    },\n\n    toggleDiff(id) {\n      // let item;\n      // for (item in this.userDifficulty) {\n      //   if (id == item.difficultyID && item.userID == this.accountID) {\n      //     return console.log(item)\n      //   }\n      // }\n      this.userDifficulty.push({\n        userID: this.accountID,\n        difficultyID: id\n      });\n    },\n\n    completed(id) {\n      console.log(id);\n    }\n\n  },\n  name: \"SongList\",\n  components: {\n    ModalDifficulty,\n    ModalLevel\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,eAAP,MAA4B,qCAA5B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,SAASC,QAAT,GAAoB;EAClBC,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAG,IAAK,KAAKC,KAAL,GAAaD,IAF/B,EAGKE,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;EAIAV,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAG,IAAK,KAAKO,YAAL,GAAoBP,IAFtC,EAGKE,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;EAIAV,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAG,IAAK,KAAKQ,KAAL,GAAaR,IAF/B,EAGKE,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;EAIAV,KAAK,CAAC,sCAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAG,IAAK,KAAKS,cAAL,GAAsBT,IAFxC,EAGKE,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;AAIF;;AAEA,eAAe;EACbN,IAAI,GAAG;IACL,OAAM;MACJU,SAAS,EAAE,CADP;MAEJC,SAAS,EAAE,KAFP;MAGJV,KAAK,EAAE,EAHH;MAIJO,KAAK,EAAE,EAJH;MAKJD,YAAY,EAAE,EALV;MAMJE,cAAc,EAAE;IANZ,CAAN;EAQD,CAVY;;EAWbG,OAAO,GAAG;IACRjB,QAAQ;IACR,KAAKgB,SAAL,GAAiB,IAAjB;EACD,CAdY;;EAebE,OAAO,EAAE;IACPC,QAAQ,CAACC,IAAD,EAAO;MACbX,OAAO,CAACC,GAAR,CAAYU,IAAZ;MACA,OAAO,KAAKR,YAAL,CAAkBS,MAAlB,CAAyBC,UAAS,IAAK;QAC5C,OAAOA,UAAU,CAACC,MAAX,KAAsBH,IAAI,CAACG,MAAlC;MACD,CAFM,CAAP;IAGD,CANM;;IAOPC,OAAO,CAACJ,IAAD,EAAO;MACZX,OAAO,CAACC,GAAR,CAAYU,IAAZ;MACA,OAAO,KAAKP,KAAL,CAAWQ,MAAX,CAAkBI,GAAE,IAAK;QAC9B,OAAOA,GAAG,CAACC,KAAJ,KAAcN,IAAI,CAACM,KAA1B;MACD,CAFM,CAAP;IAGD,CAZM;;IAaPC,UAAU,CAACC,EAAD,EAAK;MACb;MACA;MACA;MACA;MACA;MACA;MACA,KAAKd,cAAL,CAAoBe,IAApB,CAAyB;QACvBC,MAAM,EAAE,KAAKf,SADU;QAEvBgB,YAAY,EAAEH;MAFS,CAAzB;IAID,CAxBM;;IAyBPI,SAAS,CAACJ,EAAD,EAAK;MACZnB,OAAO,CAACC,GAAR,CAAYkB,EAAZ;IACF;;EA3BO,CAfI;EA4CbK,IAAI,EAAE,UA5CO;EA6CbC,UAAU,EAAE;IACVpC,eADU;IAEVC;EAFU;AA7CC,CAAf","names":["ModalDifficulty","ModalLevel","loadData","fetch","then","res","json","data","songs","catch","err","console","log","message","difficulties","mixes","userDifficulty","accountID","isMounted","mounted","methods","calcDiff","song","filter","difficulty","songID","calcMix","mix","mixID","toggleDiff","id","push","userID","difficultyID","completed","name","components"],"sourceRoot":"","sources":["/Users/local/dev/beatmania/src/assets/pages/SongList.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid bg-dark\">\n    <div class=\"row text-center\">\n      <div class=\"col-12 p-0 text pt-4\">\n        <h1 class=\"text-center\">Beatmania</h1>\n        <h2 class=\"mb-3\">The Progress</h2>\n        <div class=\"btn-group w-100\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" class=\"btn btn-primary btn-lg\" data-bs-toggle=\"modal\" data-bs-target=\"#ModalDifficulty\">MIX</button>\n          <button type=\"button\" class=\"btn btn-secondary btn-lg\" data-bs-toggle=\"modal\" data-bs-target=\"#ModalLevel\">Difficulty</button>\n          <button @click=\"submitTasks\"  type=\"button\" class=\"btn btn-primary btn-lg\">Mode</button>\n        </div>\n        <table v-if=\"isMounted\" class=\"table table-borderless bg-light table-striped\">\n          <tbody>\n            <tr v-for=\"song in songs\" :key=\"song.songID\">\n              <td class=\"d-none d-md-block\" v-for=\"mix in calcMix(song)\" :key=\"mix.mixID\">{{ mix.name }}</td>\n              <th class=\"text-start\">{{ song.name }}</th>\n              <td class=\"d-none d-md-block\">{{ song.artist }}</td>\n              <td>{{ song.bpm }}</td>\n              <td v-for=\"diff in calcDiff(song)\" :key=\"diff.difficultyID\" @click=\"toggleDiff(diff.difficultyID)\" class=\"text-white diff-td\"\n                  :class=\"diff.difficulty !== null ? 'bg-theme_' + diff.groupID:'bg-dark'\">\n                  {{ diff.difficulty }}\n              </td>\n              <td><i class=\"fa fa-star text-primary\"></i> </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  <modal-difficulty></modal-difficulty>\n  <modal-level></modal-level>\n</template>\n\n\n\n<script>\nimport ModalDifficulty from \"@/assets/components/ModalDifficulty\";\nimport ModalLevel from \"@/assets/components/ModalLevel\";\n\nfunction loadData() {\n  fetch('http://localhost:3000/songs')\n      .then(res => res.json())\n      .then(data => this.songs = data)\n      .catch(err => console.log(err.message))\n  fetch('http://localhost:3000/difficulties')\n      .then(res => res.json())\n      .then(data => this.difficulties = data)\n      .catch(err => console.log(err.message))\n  fetch('http://localhost:3000/mixes')\n      .then(res => res.json())\n      .then(data => this.mixes = data)\n      .catch(err => console.log(err.message))\n  fetch('http://localhost:3000/userDifficulty')\n      .then(res => res.json())\n      .then(data => this.userDifficulty = data)\n      .catch(err => console.log(err.message))\n}\n\nexport default {\n  data() {\n    return{\n      accountID: 0,\n      isMounted: false,\n      songs: [],\n      mixes: [],\n      difficulties: [],\n      userDifficulty: []\n    }\n  },\n  mounted() {\n    loadData();\n    this.isMounted = true\n  },\n  methods: {\n    calcDiff(song) {\n      console.log(song)\n      return this.difficulties.filter(difficulty => {\n        return difficulty.songID === song.songID\n      })\n    },\n    calcMix(song) {\n      console.log(song)\n      return this.mixes.filter(mix => {\n        return mix.mixID === song.mixID\n      })\n    },\n    toggleDiff(id) {\n      // let item;\n      // for (item in this.userDifficulty) {\n      //   if (id == item.difficultyID && item.userID == this.accountID) {\n      //     return console.log(item)\n      //   }\n      // }\n      this.userDifficulty.push({\n        userID: this.accountID,\n        difficultyID: id\n      });\n    },\n    completed(id) {\n      console.log(id)\n    }\n  },\n  name: \"SongList\",\n  components: {\n    ModalDifficulty,\n    ModalLevel\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}