{"ast":null,"code":"import ModalDifficulty from \"@/assets/components/ModalDifficulty\";\nimport ModalLevel from \"@/assets/components/ModalLevel\";\nlet userID;\nuserID = 0;\nexport default {\n  data() {\n    return {\n      isMounted: false,\n      songs: [],\n      mixes: [],\n      difficulties: [],\n      userDifficulty: []\n    };\n  },\n\n  mounted() {\n    fetch('http://localhost:3000/songs').then(res => res.json()).then(data => this.songs = data).catch(err => console.log(err.message));\n    fetch('http://localhost:3000/difficulties').then(res => res.json()).then(data => this.difficulties = data).catch(err => console.log(err.message));\n    fetch('http://localhost:3000/mixes').then(res => res.json()).then(data => this.mixes = data).catch(err => console.log(err.message));\n    fetch('http://localhost:3000/userDifficulty').then(res => res.json()).then(data => this.userDifficulty = data).catch(err => console.log(err.message));\n    this.isMounted = true;\n  },\n\n  methods: {\n    calcDiff(song) {\n      console.log(song);\n      return this.difficulties.filter(difficulty => {\n        return difficulty.songID === song.songID;\n      });\n    },\n\n    calcMix(song) {\n      console.log(song);\n      return this.mixes.filter(mix => {\n        return mix.mixID === song.mixID;\n      });\n    },\n\n    toggleDiff(id) {\n      let item;\n\n      for (item in this.userDifficulty) {\n        return console.log(item);\n\n        if (id == item.difficultyID && item.userID == userID) {}\n      }\n    }\n\n  },\n  name: \"SongList\",\n  components: {\n    ModalDifficulty,\n    ModalLevel\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,eAAP,MAA4B,qCAA5B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,IAAIC,MAAJ;AACAA,MAAK,GAAI,CAAT;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAM;MACJC,SAAS,EAAE,KADP;MAEJC,KAAK,EAAE,EAFH;MAGJC,KAAK,EAAE,EAHH;MAIJC,YAAY,EAAE,EAJV;MAKJC,cAAc,EAAE;IALZ,CAAN;EAOD,CATY;;EAUbC,OAAO,GAAG;IACRC,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUR,IAAG,IAAK,KAAKE,KAAL,GAAaF,IAF/B,EAGKW,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;IAIAR,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUR,IAAG,IAAK,KAAKI,YAAL,GAAoBJ,IAFtC,EAGKW,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;IAIAR,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUR,IAAG,IAAK,KAAKG,KAAL,GAAaH,IAF/B,EAGKW,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;IAIAR,KAAK,CAAC,sCAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUR,IAAG,IAAK,KAAKK,cAAL,GAAsBL,IAFxC,EAGKW,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;IAIA,KAAKd,SAAL,GAAiB,IAAjB;EACD,CA5BY;;EA6Bbe,OAAO,EAAE;IACPC,QAAQ,CAACC,IAAD,EAAO;MACbL,OAAO,CAACC,GAAR,CAAYI,IAAZ;MACA,OAAO,KAAKd,YAAL,CAAkBe,MAAlB,CAAyBC,UAAS,IAAK;QAC5C,OAAOA,UAAU,CAACC,MAAX,KAAsBH,IAAI,CAACG,MAAlC;MACD,CAFM,CAAP;IAGD,CANM;;IAOPC,OAAO,CAACJ,IAAD,EAAO;MACZL,OAAO,CAACC,GAAR,CAAYI,IAAZ;MACA,OAAO,KAAKf,KAAL,CAAWgB,MAAX,CAAkBI,GAAE,IAAK;QAC9B,OAAOA,GAAG,CAACC,KAAJ,KAAcN,IAAI,CAACM,KAA1B;MACD,CAFM,CAAP;IAGD,CAZM;;IAaPC,UAAU,CAACC,EAAD,EAAK;MACb,IAAIC,IAAJ;;MACA,KAAKA,IAAL,IAAa,KAAKtB,cAAlB,EAAkC;QAChC,OAAOQ,OAAO,CAACC,GAAR,CAAYa,IAAZ,CAAP;;QACA,IAAID,EAAC,IAAKC,IAAI,CAACC,YAAX,IAA2BD,IAAI,CAAC5B,MAAL,IAAeA,MAA9C,EAAsD,CACtD;MACF;IACF;;EApBO,CA7BI;EAmDb8B,IAAI,EAAE,UAnDO;EAoDbC,UAAU,EAAE;IACVjC,eADU;IAEVC;EAFU;AApDC,CAAf","names":["ModalDifficulty","ModalLevel","userID","data","isMounted","songs","mixes","difficulties","userDifficulty","mounted","fetch","then","res","json","catch","err","console","log","message","methods","calcDiff","song","filter","difficulty","songID","calcMix","mix","mixID","toggleDiff","id","item","difficultyID","name","components"],"sourceRoot":"","sources":["/Users/local/dev/beatmania/src/assets/pages/SongList.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid bg-dark\">\n    <div class=\"row text-center\">\n      <div class=\"col-12 p-0 text pt-4\">\n        <h1 class=\"text-center\">Beatmania</h1>\n        <h2 class=\"mb-3\">The Progress</h2>\n        <div class=\"btn-group w-100\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" class=\"btn btn-primary btn-lg\" data-bs-toggle=\"modal\" data-bs-target=\"#ModalDifficulty\">MIX</button>\n          <button type=\"button\" class=\"btn btn-secondary btn-lg\" data-bs-toggle=\"modal\" data-bs-target=\"#ModalLevel\">Difficulty</button>\n          <button @click=\"submitTasks\"  type=\"button\" class=\"btn btn-primary btn-lg\">Mode</button>\n        </div>\n        <table v-if=\"isMounted\" class=\"table table-borderless bg-light table-striped\">\n          <tbody>\n            <tr v-for=\"song in songs\" :key=\"song.songID\">\n              <td class=\"d-none d-md-block\" v-for=\"mix in calcMix(song)\" :key=\"mix.mixID\">{{ mix.name }}</td>\n              <th class=\"text-start\">{{ song.name }}</th>\n              <td class=\"d-none d-md-block\">{{ song.artist }}</td>\n              <td>{{ song.bpm }}</td>\n              <td v-for=\"diff in calcDiff(song)\" :key=\"diff.difficultyID\" @click=\"toggleDiff(diff.difficultyID)\" class=\"text-white\"\n                  :class=\"diff.groupID !== null ? 'bg-theme_' + diff.groupID:''\">\n                  {{ diff.difficulty }}\n              </td>\n              <td><i class=\"fa fa-star text-primary\"></i> </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  <modal-difficulty></modal-difficulty>\n  <modal-level></modal-level>\n</template>\n\n\n\n<script>\nimport ModalDifficulty from \"@/assets/components/ModalDifficulty\";\nimport ModalLevel from \"@/assets/components/ModalLevel\";\n\nlet userID;\nuserID = 0;\n\nexport default {\n  data() {\n    return{\n      isMounted: false,\n      songs: [],\n      mixes: [],\n      difficulties: [],\n      userDifficulty: []\n    }\n  },\n  mounted() {\n    fetch('http://localhost:3000/songs')\n        .then(res => res.json())\n        .then(data => this.songs = data)\n        .catch(err => console.log(err.message))\n    fetch('http://localhost:3000/difficulties')\n        .then(res => res.json())\n        .then(data => this.difficulties = data)\n        .catch(err => console.log(err.message))\n    fetch('http://localhost:3000/mixes')\n        .then(res => res.json())\n        .then(data => this.mixes = data)\n        .catch(err => console.log(err.message))\n    fetch('http://localhost:3000/userDifficulty')\n        .then(res => res.json())\n        .then(data => this.userDifficulty = data)\n        .catch(err => console.log(err.message))\n    this.isMounted = true\n  },\n  methods: {\n    calcDiff(song) {\n      console.log(song)\n      return this.difficulties.filter(difficulty => {\n        return difficulty.songID === song.songID\n      })\n    },\n    calcMix(song) {\n      console.log(song)\n      return this.mixes.filter(mix => {\n        return mix.mixID === song.mixID\n      })\n    },\n    toggleDiff(id) {\n      let item;\n      for (item in this.userDifficulty) {\n        return console.log(item)\n        if (id == item.difficultyID && item.userID == userID) {\n        }\n      }\n    }\n  },\n  name: \"SongList\",\n  components: {\n    ModalDifficulty,\n    ModalLevel\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}