{"ast":null,"code":"import ModalDifficulty from \"@/assets/components/ModalDifficulty\";\nimport ModalLevel from \"@/assets/components/ModalLevel\";\nexport default {\n  data() {\n    return {\n      accountID: 0,\n      isMounted: false,\n      songs: [],\n      mixes: [],\n      difficulties: [],\n      userDifficulty: []\n    };\n  },\n\n  mounted() {\n    this.loadData();\n    this.isMounted = true;\n  },\n\n  methods: {\n    loadData() {\n      fetch('http://localhost:3000/songs').then(res => res.json()).then(data => this.songs = data).catch(err => console.log(err.message));\n      fetch('http://localhost:3000/difficulties').then(res => res.json()).then(data => this.difficulties = data).catch(err => console.log(err.message));\n      fetch('http://localhost:3000/mixes').then(res => res.json()).then(data => this.mixes = data).catch(err => console.log(err.message));\n      fetch('http://localhost:3000/userDifficulty').then(res => res.json()).then(data => this.userDifficulty = data).catch(err => console.log(err.message));\n    },\n\n    calcDiff(song) {\n      console.log(song);\n      return this.difficulties.filter(difficulty => {\n        return difficulty.songID === song.songID;\n      });\n    },\n\n    calcMix(song) {\n      console.log(song);\n      return this.mixes.filter(mix => {\n        return mix.mixID === song.mixID;\n      });\n    },\n\n    isDifficultyPassed(id) {\n      const has = this.userDifficulty.find(function (difficultyRow) {\n        if (difficultyRow.difficultyID != id) {\n          return false;\n        }\n\n        if (difficultyRow.userID != this.accountID) {\n          return false;\n        }\n\n        return true;\n      });\n      return has != undefined;\n    },\n\n    toggleDiff(id) {\n      if (!this.isDifficultyPassed(id)) {\n        this.userDifficulty.push({\n          userID: this.accountID,\n          difficultyID: id\n        });\n      } else {\n        this.userDifficulty = this.userDifficulty.filter(function (difficultyRow) {\n          if (difficultyRow.difficultyID != id) {\n            return true;\n          }\n\n          if (difficultyRow.userID != this.accountID) {\n            return true;\n          }\n\n          return false;\n        });\n      }\n    }\n\n  },\n  name: \"SongList\",\n  components: {\n    ModalDifficulty,\n    ModalLevel\n  }\n};","map":{"version":3,"mappings":"AA0CA,OAAOA,eAAP,MAA4B,qCAA5B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAM;MACJC,SAAS,EAAE,CADP;MAEJC,SAAS,EAAE,KAFP;MAGJC,KAAK,EAAE,EAHH;MAIJC,KAAK,EAAE,EAJH;MAKJC,YAAY,EAAE,EALV;MAMJC,cAAc,EAAE;IANZ,CAAN;EAQD,CAVY;;EAWbC,OAAO,GAAG;IACR,KAAKC,QAAL;IACA,KAAKN,SAAL,GAAiB,IAAjB;EACD,CAdY;;EAebO,OAAO,EAAE;IACPD,QAAQ,GAAG;MACTE,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUX,IAAG,IAAK,KAAKG,KAAL,GAAaH,IAF/B,EAGKc,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;MAKAR,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUX,IAAG,IAAK,KAAKK,YAAL,GAAoBL,IAFtC,EAGKc,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;MAKAR,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUX,IAAG,IAAK,KAAKI,KAAL,GAAaJ,IAF/B,EAGKc,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;MAKAR,KAAK,CAAC,sCAAD,CAAL,CACKC,IADL,CACUC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUX,IAAG,IAAK,KAAKM,cAAL,GAAsBN,IAFxC,EAGKc,KAHL,CAGWC,GAAE,IAAKC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAHlB;IAID,CArBM;;IAsBPC,QAAQ,CAACC,IAAD,EAAO;MACbJ,OAAO,CAACC,GAAR,CAAYG,IAAZ;MACA,OAAO,KAAKf,YAAL,CAAkBgB,MAAlB,CAAyBC,UAAS,IAAK;QAC5C,OAAOA,UAAU,CAACC,MAAX,KAAsBH,IAAI,CAACG,MAAlC;MACD,CAFM,CAAP;IAGD,CA3BM;;IA4BPC,OAAO,CAACJ,IAAD,EAAO;MACZJ,OAAO,CAACC,GAAR,CAAYG,IAAZ;MACA,OAAO,KAAKhB,KAAL,CAAWiB,MAAX,CAAkBI,GAAE,IAAK;QAC9B,OAAOA,GAAG,CAACC,KAAJ,KAAcN,IAAI,CAACM,KAA1B;MACD,CAFM,CAAP;IAGD,CAjCM;;IAkCPC,kBAAkB,CAACC,EAAD,EAAK;MAErB,MAAMC,GAAE,GAAI,KAAKvB,cAAL,CAAoBwB,IAApB,CAAyB,UAASC,aAAT,EAAwB;QAE3D,IAAGA,aAAa,CAACC,YAAd,IAA8BJ,EAAjC,EAAqC;UACnC,OAAO,KAAP;QACF;;QACA,IAAGG,aAAa,CAACE,MAAd,IAAwB,KAAKhC,SAAhC,EAA2C;UACzC,OAAO,KAAP;QACF;;QACA,OAAO,IAAP;MAED,CAVW,CAAZ;MAYA,OAAO4B,GAAE,IAAKK,SAAd;IAED,CAlDM;;IAmDPC,UAAU,CAACP,EAAD,EAAK;MACb,IAAG,CAAC,KAAKD,kBAAL,CAAwBC,EAAxB,CAAJ,EAAiC;QAE/B,KAAKtB,cAAL,CAAoB8B,IAApB,CAAyB;UACvBH,MAAM,EAAE,KAAKhC,SADU;UAEvB+B,YAAY,EAAEJ;QAFS,CAAzB;MAKF,CAPA,MAOO;QAEL,KAAKtB,cAAL,GAAsB,KAAKA,cAAL,CAAoBe,MAApB,CAA2B,UAASU,aAAT,EAAwB;UACvE,IAAGA,aAAa,CAACC,YAAd,IAA8BJ,EAAjC,EAAqC;YACnC,OAAO,IAAP;UACF;;UACA,IAAGG,aAAa,CAACE,MAAd,IAAwB,KAAKhC,SAAhC,EAA2C;YACzC,OAAO,IAAP;UACF;;UACA,OAAO,KAAP;QACD,CARqB,CAAtB;MAUF;IACF;;EAxEO,CAfI;EAyFboC,IAAI,EAAE,UAzFO;EA0FbC,UAAU,EAAE;IACVxC,eADU;IAEVC;EAFU;AA1FC,CAAf","names":["ModalDifficulty","ModalLevel","data","accountID","isMounted","songs","mixes","difficulties","userDifficulty","mounted","loadData","methods","fetch","then","res","json","catch","err","console","log","message","calcDiff","song","filter","difficulty","songID","calcMix","mix","mixID","isDifficultyPassed","id","has","find","difficultyRow","difficultyID","userID","undefined","toggleDiff","push","name","components"],"sourceRoot":"","sources":["/Users/local/dev/beatmania/src/assets/pages/SongList.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid bg-dark\">\n    <div class=\"row text-center\">\n      <div class=\"col-12 p-0 text pt-4\">\n        <h1 class=\"text-center\">Beatmania</h1>\n        <h2 class=\"mb-3\">The Progress</h2>\n        <div class=\"btn-group w-100\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" class=\"btn btn-primary btn-lg\" data-bs-toggle=\"modal\" data-bs-target=\"#ModalDifficulty\">MIX</button>\n          <button type=\"button\" class=\"btn btn-secondary btn-lg\" data-bs-toggle=\"modal\" data-bs-target=\"#ModalLevel\">Difficulty</button>\n          <button @click=\"loadData\"  type=\"button\" class=\"btn btn-primary btn-lg\">Reload data</button>\n        </div>\n        <table v-if=\"isMounted\" class=\"table table-borderless bg-light table-striped\">\n          <tbody>\n            <tr v-for=\"song in songs\" :key=\"song.songID\">\n              <td class=\"d-none d-md-block\"\n                  v-for=\"mix in calcMix(song)\"\n                  :key=\"mix.mixID\">{{ mix.name }}\n              </td>\n              <th class=\"text-start\">{{ song.name }}</th>\n              <td class=\"d-none d-md-block\">{{ song.artist }}</td>\n              <td>{{ song.bpm }}</td>\n              <td class=\"text-white diff-td\"\n                  v-for=\"diff in calcDiff(song)\"\n                  @click=\"toggleDiff(diff.difficultyID)\"\n                  :key=\"diff.difficultyID\"\n                  :class=\"(diff.difficulty !== null ? 'bg-theme_' + diff.groupID:'bg-dark') + ' ' + (isDifficultyPassed(diff.difficultyID) ? 'passed' : '')\">\n                  {{ diff.difficulty }}\n              </td>\n              <td><i class=\"fa fa-star text-primary\"></i> </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  <modal-difficulty></modal-difficulty>\n  <modal-level></modal-level>\n</template>\n\n\n\n<script>\nimport ModalDifficulty from \"@/assets/components/ModalDifficulty\";\nimport ModalLevel from \"@/assets/components/ModalLevel\";\n\nexport default {\n  data() {\n    return{\n      accountID: 0,\n      isMounted: false,\n      songs: [],\n      mixes: [],\n      difficulties: [],\n      userDifficulty: []\n    }\n  },\n  mounted() {\n    this.loadData()\n    this.isMounted = true\n  },\n  methods: {\n    loadData() {\n      fetch('http://localhost:3000/songs')\n          .then(res => res.json())\n          .then(data => this.songs = data)\n          .catch(err => console.log(err.message))\n\n      fetch('http://localhost:3000/difficulties')\n          .then(res => res.json())\n          .then(data => this.difficulties = data)\n          .catch(err => console.log(err.message))\n\n      fetch('http://localhost:3000/mixes')\n          .then(res => res.json())\n          .then(data => this.mixes = data)\n          .catch(err => console.log(err.message))\n\n      fetch('http://localhost:3000/userDifficulty')\n          .then(res => res.json())\n          .then(data => this.userDifficulty = data)\n          .catch(err => console.log(err.message))\n    },\n    calcDiff(song) {\n      console.log(song)\n      return this.difficulties.filter(difficulty => {\n        return difficulty.songID === song.songID\n      })\n    },\n    calcMix(song) {\n      console.log(song)\n      return this.mixes.filter(mix => {\n        return mix.mixID === song.mixID\n      })\n    },\n    isDifficultyPassed(id) {\n\n      const has = this.userDifficulty.find(function(difficultyRow) {\n\n        if(difficultyRow.difficultyID != id) {\n          return false\n        }\n        if(difficultyRow.userID != this.accountID) {\n          return false\n        }\n        return true\n\n      })\n\n      return has != undefined\n\n    },\n    toggleDiff(id) {\n      if(!this.isDifficultyPassed(id)) {\n\n        this.userDifficulty.push({\n          userID: this.accountID,\n          difficultyID: id\n        });\n\n      } else {\n\n        this.userDifficulty = this.userDifficulty.filter(function(difficultyRow) {\n          if(difficultyRow.difficultyID != id) {\n            return true\n          }\n          if(difficultyRow.userID != this.accountID) {\n            return true\n          }\n          return false\n        })\n\n      }\n    }\n  },\n  name: \"SongList\",\n  components: {\n    ModalDifficulty,\n    ModalLevel\n  }\n}\n\n</script>\n\n<style scoped>\n.passed {\n  color: grey!important;\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}